<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />


	<!-- <mvc:interceptors> -->
	<!-- <mvc:interceptor> -->
	<!-- <mvc:mapping path="/**/*" /> -->
	<!-- <bean class="com.directorateofestates.filter.AuthorizationInterceptor"></bean> -->
	<!-- </mvc:interceptor> -->
	<!-- </mvc:interceptors> -->



	<context:annotation-config />
	<context:component-scan base-package="com.peyala" />
	<context:property-placeholder location="classpath:resources/database.properties"
		order="1" ignore-unresolvable="true" />
	<context:property-placeholder location="classpath:resources/email.properties"
		order="2" ignore-unresolvable="true" />
	<!-- <context:property-placeholder
		location="classpath:/resources/application.properties" order="3"
		ignore-unresolvable="true" /> -->


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${database.driver}" p:url="${database.url}"
		p:username="${database.user}" p:password="${database.password}" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.peyala.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.c3p0.min_size">5</prop>
                <prop key="hibernate.c3p0.max_size">20</prop>
                <prop key="hibernate.c3p0.timeout">300</prop>
                <prop key="hibernate.c3p0.max_statements">50</prop>
                <prop key="hibernate.c3p0.idle_test_period">3000</prop>
                <prop key="hibernate.dbcp.initialSize">8</prop>
                <prop key="hibernate.dbcp.maxActive">20</prop>
                 <prop key="hibernate.dbcp.maxIdle">20</prop>
                 <prop key="hibernate.dbcp.minIdle">0</prop>
				
				
				
				
				
				
<!-- 				<prop key="hibernate.connection.useUnicode">${hibernate.connection.useUnicode}</prop> -->
<!-- 				<prop key="hibernate.connection.characterEncoding">${hibernate.connection.characterEncoding}</prop> -->
<!-- 				<prop key="hibernate.connection.charSet">${hibernate.connection.charSet}</prop> -->
				<!-- <prop key="hibernate.default_schema">${hibernate.schema}</prop> -->
			</props>
		</property>
	</bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->

		<property name="maxUploadSize" value="1000000000000000000" />

	</bean>

	<tx:annotation-driven />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${mail.host}" />
		<property name="port" value="${mail.port}" />
		<property name="username" value="${mail.username}" />
		<property name="password" value="${mail.password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.ssl.trust">${mail.smtp.ssl.trust}</prop>
				<prop key="mail.transport.protocol">${mail.transport.protocol}</prop>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
			</props>
		</property>
	</bean>

	<!-- <bean id="facebookServiceConfig" class="com.directorateofestates.social.OAuthServiceConfig">
		<constructor-arg value="${app.config.oauth.facebook.apikey}" />
		<constructor-arg value="${app.config.oauth.facebook.apisecret}" />
		<constructor-arg value="${app.config.oauth.facebook.callback}" />
		<constructor-arg value="${org.scribe.builder.api.FacebookApi}" />
	</bean>

	<bean id="facebookServiceProvider" class="com.directorateofestates.social.OAuthServiceProvider">
		<constructor-arg name="config" ref="facebookServiceConfig" />
	</bean> -->
</beans>